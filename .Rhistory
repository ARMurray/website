wells <- st_read(system.file("~/Documents/Fracking/OH_Production_to_Q2_2016/OH_Production_to_Q@_2016.shp", package="sf"))
wells <- st_read("~/Documents/Fracking/OH_Production_to_Q2_2016/OH_Production_to_Q@_2016.shp", package="sf")
wells <- st_read("~/Documents/Fracking/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp", package="sf")
wells <- st_read(system.file("/Users/Andrew/Documents/Fracking/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp", package="sf"))
wells <- st_read("/Users/Andrew/Documents/Fracking/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp", package="sf")
wells <- st_read(system.file("/Users/Andrew/Documents/Fracking/Test_Data/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp", package="sf"))
?st_read
wells <- st_read(dsn = "/Users/Andrew/Documents/Fracking/Test_Data/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp", package = 'sf')
wells <- st_read("/Users/Andrew/Documents/Fracking/Test_Data/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp")
plot(wells)
head(wells)
plot(wells[5])
plot(wells[35])
plot(wells['TotalGas'])
plot(wells)
class(wells)
plot(wells$County)
plot(wells$TotalGas)
library(leaflet)
install.packages(leaflet)
install.packages('leaflet')
plot(st_geometry(wells))
View(wells)
?st_read
table <- as.data.frame(sf)
table <- as.data.frame(wells)
ohio <- st_read("/Users/Andrew/Documents/Fracking/Test_Data/OH_Shape/OH_blk_grp_2010.shp")
library(ggplot2)
ggplot(wells)+geom_point()
?knn
?sf
library(sf)
?sf
well_sub <- wells[1]
wells <- st_read("/Users/Andrew/Documents/Fracking/Test_Data/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp")
ohio <- st_read("/Users/Andrew/Documents/Fracking/Test_Data/OH_Shape/OH_blk_grp_2010.shp")
ohio <- st_read("/Users/Andrew/Documents/Fracking/Test_Data/OH_Shape/OH_blk_grp_2010.shp")
plot(wells)
library(sf)
library(leaflet)
library(ggplot2)
ggplot(wells)+geom_sf()
head(wells)
library(rgdal)
install.packages('rgdal')
library(rgdal)
crs_data = rgdal::make_EPSG()
View(crs_data)
wells <- st_read("/Users/Andrew/Documents/Fracking/Test_Data/OH_Production_to_Q2_2016/OH_Production_to_Q2_2016.shp", crs=4269)
wells_prj <- st_transform(wells, 2958)
ggplot(wells_prj)+geom_sf()
ggplot(wells_prj)+geom_sf(aes(x = Surf_Lon, y = Surf_Lat))
head(wells_prj)
ggplot(wells_prj)+geom_sf(aes(x = SurfLon, y = SurfLat))
b = st_sfc(st_point(c(0, 1)), st_point(c(1, 1))) # create 2 points
b = st_buffer(b, dist = 1) # convert points to circles
plot(b)
text(x = c(-0.5, 1.5), y = 1, labels = c("x", "y")) # add text
x = b[1]
y = b[2]
x_and_y = st_intersection(x, y)
plot(b)
plot(x_and_y, col = "lightgrey", add = TRUE) # color intersecting area
head(x_and_y)
x$value <- "these are x values"
y$vals <- "these are y values"
x_and_y = st_intersection(x, y)
x = b[1]
y = b[2]
x_and_y = st_intersection(x, y)
x$vals <- "these are vals"
head(x)
x <- as.data.frame(x)
head(x)
View(x)
x = b[1]
y = b[2]
x_and_y = st_intersection(x, y)
plot(b)
plot(x_and_y, col = "lightgrey", add = TRUE) # color intersecting area
b = st_sfc(st_point(c(0, 1)), st_point(c(1, 1))) # create 2 points
b = st_buffer(b, dist = 1) # convert points to circles
plot(b)
plot(b)
text(x = c(-0.5, 1.5), y = 1, labels = c("x", "y")) # add text
x = b[1]
y = b[2]
x_and_y = st_intersection(x, y)
plot(b)
plot(x_and_y, col = "lightgrey", add = TRUE) # color intersecting area
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
#Mac
setwd('/Users/Andrew/Documents/R_Geometry')
library(sf)
library(rgdal)
library(dplyr)
library(ggplot2)
#home
#setwd('C:/Users/Andrew/Desktop/R_Geometry')
#Davis
#setwd('C:/Users/Lib_dres.com/Desktop/R_Geometry')
#Mac
setwd('/Users/Andrew/Documents/R_Geometry')
blocks <- st_read('Blocks_5mi_Utica_NAD83.shp', crs = 4269)
blocks_prj <-  st_transform(blocks, 2958)
Wells <- read.csv('Downloaded/Utica_092218.csv')
Wells_sf <- st_as_sf(Wells, coords = c("Surf_Lon","Surf_Lat"), crs = 4269)
Wells_prj <- st_transform(Wells_sf, 2958)
counties <- st_read('counties_NAD83.shp', crs = 4269)
counties_prj <- st_transform(counties, 2958)
centroids <- st_centroid(counties_prj)
centroids_xy <- st_coordinates(centroids)
centroids$X <- centroids_xy[,1]
centroids$Y <- centroids_xy[,2]
bbox <- st_bbox(Wells_prj)
well_palette <- c("#FF8500", "#FFE600", "#65E809", "#E81903")
map <- ggplot() + geom_sf(data = counties_prj)+
geom_sf(data = Wells_prj, aes(colour=Status, fill = Status))+
scale_fill_manual(values=well_palette)+
scale_color_manual(values=well_palette)+
geom_text(data = centroids, aes(x = X, y = Y, label = NAME10),size = 2.5)+
xlim(as.integer(bbox$xmin), as.integer(bbox$xmax)) + ylim(as.integer(bbox$ymin), as.integer(bbox$ymax))
map
library(sf)
library(rgdal)
library(dplyr)
library(ggplot2)
#home
#setwd('C:/Users/Andrew/Desktop/R_Geometry')
#Davis
#setwd('C:/Users/Lib_dres.com/Desktop/R_Geometry')
#Mac
setwd('/Users/Andrew/Documents/R_Geometry')
blocks <- st_read('Blocks_5mi_Utica_NAD83.shp', crs = 4269)
blocks_prj <-  st_transform(blocks, 2958)
Wells <- read.csv('Downloaded/Utica_092218.csv')
Wells_sf <- st_as_sf(Wells, coords = c("Surf_Lon","Surf_Lat"), crs = 4269)
Wells_prj <- st_transform(Wells_sf, 2958)
counties <- st_read('counties_NAD83.shp', crs = 4269)
counties_prj <- st_transform(counties, 2958)
centroids <- st_centroid(counties_prj)
centroids_xy <- st_coordinates(centroids)
centroids$X <- centroids_xy[,1]
centroids$Y <- centroids_xy[,2]
bbox <- st_bbox(Wells_prj)
well_palette <- c("#FF8500", "#FFE600", "#65E809", "#E81903")
map <- ggplot() + geom_sf(data = counties_prj)+
geom_sf(data = Wells_prj, aes(colour=Status, fill = Status))+
scale_fill_manual(values=well_palette)+
scale_color_manual(values=well_palette)+
geom_text(data = centroids, aes(x = X, y = Y, label = NAME10),size = 2.5)+
xlab("Latitude")+ylab("Longitude")+
xlim(as.integer(bbox$xmin), as.integer(bbox$xmax)) + ylim(as.integer(bbox$ymin), as.integer(bbox$ymax))
map
?ggsave
ggsave('Utics_Wells.png',plot = map, device = "png")
ggsave('/Users/Andrew/Documents/R_Geometry/Utics_Wells.png',plot = map, device = "png")
blogdown::install_hugo()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
library(sf)
library(rgdal)
library(dplyr)
library(ggplot2)
#home
#setwd('C:/Users/Andrew/Desktop/R_Geometry')
#Davis
#setwd('C:/Users/Lib_dres.com/Desktop/R_Geometry')
#Mac
setwd('/Users/Andrew/Documents/R_Geometry')
blocks <- st_read('Blocks_5mi_Utica_NAD83.shp', crs = 4269)
blocks_prj <-  st_transform(blocks, 2958)
Wells <- read.csv('Downloaded/Utica_092218.csv')
Wells_sf <- st_as_sf(Wells, coords = c("Surf_Lon","Surf_Lat"), crs = 4269)
Wells_prj <- st_transform(Wells_sf, 2958)
counties <- st_read('counties_NAD83.shp', crs = 4269)
counties_prj <- st_transform(counties, 2958)
library(sf)
library(rgdal)
library(dplyr)
library(ggplot2)
#home
#setwd('C:/Users/Andrew/Desktop/R_Geometry')
#Davis
#setwd('C:/Users/Lib_dres.com/Desktop/R_Geometry')
#Mac
setwd('/Users/Andrew/Documents/R_Geometry')
blocks <- st_read('Blocks_5mi_Utica_NAD83.shp', crs = 4269)
blocks_prj <-  st_transform(blocks, 2958)
Wells <- read.csv('Downloaded/Utica_092218.csv')
Wells_sf <- st_as_sf(Wells, coords = c("Surf_Lon","Surf_Lat"), crs = 4269)
Wells_prj <- st_transform(Wells_sf, 2958)
counties <- st_read('counties_NAD83.shp', crs = 4269)
counties_prj <- st_transform(counties, 2958)
centroids <- st_centroid(counties_prj)
centroids_xy <- st_coordinates(centroids)
centroids$X <- centroids_xy[,1]
centroids$Y <- centroids_xy[,2]
bbox <- st_bbox(Wells_prj)
well_palette <- c("#FF8500", "#FFE600", "#65E809", "#E81903")
map <- ggplot() + geom_sf(data = counties_prj)+
geom_sf(data = Wells_prj, aes(colour=Status, fill = Status))+
scale_fill_manual(values=well_palette)+
scale_color_manual(values=well_palette)+
geom_text(data = centroids, aes(x = X, y = Y, label = NAME10),size = 2.5)+
xlab("")+ylab("")+
xlim(as.integer(bbox$xmin), as.integer(bbox$xmax)) + ylim(as.integer(bbox$ymin), as.integer(bbox$ymax))
ggsave('/Users/Andrew/Documents/R_Geometry/Utica_Wells.png',plot = map, device = "png")
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::new_post_addin()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
library(ggplot2)
table <- read.table("/Users/Andrew/Downloads/LabTest09192018.csv",header = TRUE, skip = 0, sep = ",")
colnames(table) <- c('TIMESTAMP','RECORD','CO2_1_avg','CO2_1_Min','CO2_1_Max','CO2_1_TMx','CO2_2_Avg','CO2_2_Max',
'CO2_2_TMx','CO2_2_Min','CO2_2_TMin','EOS_Flux_Avg','EOS_Flux_Max','EOS_Flux_TMx','EOS_Flux_Min',
'EOS_Flux_TMn','EOS_CO2_Avg','EOS_Temp_Avg','BattV_Avg','PTemp_C_Avg','Temp_C_Avg')
#Convert time to Posixct
table$time <- as.POSIXct(table$TIMESTAMP)
#Convert Analog outputs to PPM
table$CO2_1_PPM <- (table$CO2_1_avg / 1000) * 10000
table$CO2_2_PPM <- (table$CO2_2_Avg / 1000) * 10000
table$EOS_CO2_PPM <- (table$EOS_CO2_Avg / 5000) * 5000
table$EOS_tempC <- ((table$EOS_Temp_Avg / 5000) * 70) -20
#Convert Flux to range of -10 to 10 umol m2s1
table$EOS_Flux_umol <- ((table$EOS_Flux_Avg / 5000) * 20) -10
#Build a plot to visualize variation in CO2 measurements
#Create simplified table with CO2 Measurements by Sensor
CO2_1 <- data.frame(table$CO2_1_PPM)
CO2_1$Sensor <- "Sensor 1"
CO2_1$Time <- as.POSIXct(table$TIMESTAMP)
colnames(CO2_1) <- c("PPM","Sensor","Time")
CO2_2 <- data.frame(table$CO2_2_PPM)
CO2_2$Sensor <- "Sensor 2"
CO2_2$Time <- as.POSIXct(table$TIMESTAMP)
colnames(CO2_2) <- c("PPM","Sensor","Time")
EOS_CO2 <- data.frame(table$EOS_CO2_PPM)
EOS_CO2$Sensor <- "EOS Sensor"
EOS_CO2$Time <- as.POSIXct(table$TIMESTAMP)
colnames(EOS_CO2) <- c("PPM","Sensor", "Time")
CO2_All <- rbind(CO2_1,CO2_2,EOS_CO2)
#Simple CO2 plot with lines
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")
lines
#CO2 Flux Plot
flux <- data.frame(as.POSIXct(table$TIMESTAMP))
flux$flux <- table$EOS_Flux_umol
colnames(flux) <- c('time','flux')
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))
flux_lines
#Temperature Plot
EOS_temp <- data.frame(table$EOS_tempC)
EOS_temp$sensor <- "EOS"
colnames(EOS_temp) <- c('Temp','Sensor')
Amb_temp <- data.frame(table$Temp_C_Avg)
Amb_temp$sensor <- "Thermocouple"
colnames(Amb_temp) <- c('Temp','Sensor')
Log_temp <-  data.frame(table$PTemp_C_Avg)
Log_temp$sensor <- "Data Logger Internal"
colnames(Log_temp) <- c('Temp','Sensor')
temp <- rbind(EOS_temp,Amb_temp,Log_temp)
temp$time <- as.POSIXct(table$TIMESTAMP)
temp_lines <- ggplot(temp, aes(x=time, y=Temp, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple Temp Sensors")
temp_lines
library(ggplot2)
table <- read.table("/Users/Andrew/Downloads/LabTest09192018.csv",header = TRUE, skip = 0, sep = ",")
colnames(table) <- c('TIMESTAMP','RECORD','CO2_1_avg','CO2_1_Min','CO2_1_Max','CO2_1_TMx','CO2_2_Avg','CO2_2_Max',
'CO2_2_TMx','CO2_2_Min','CO2_2_TMin','EOS_Flux_Avg','EOS_Flux_Max','EOS_Flux_TMx','EOS_Flux_Min',
'EOS_Flux_TMn','EOS_CO2_Avg','EOS_Temp_Avg','BattV_Avg','PTemp_C_Avg','Temp_C_Avg')
#Convert time to Posixct
table$time <- as.POSIXct(table$TIMESTAMP)
#Convert Analog outputs to PPM
table$CO2_1_PPM <- (table$CO2_1_avg / 1000) * 10000
table$CO2_2_PPM <- (table$CO2_2_Avg / 1000) * 10000
table$EOS_CO2_PPM <- (table$EOS_CO2_Avg / 5000) * 5000
table$EOS_tempC <- ((table$EOS_Temp_Avg / 5000) * 70) -20
#Convert Flux to range of -10 to 10 umol m2s1
table$EOS_Flux_umol <- ((table$EOS_Flux_Avg / 5000) * 20) -10
library(ggplot2)
table <- read.table("/Users/Andrew/Downloads/LabTest09192018.csv",header = TRUE, skip = 0, sep = ",")
colnames(table) <- c('TIMESTAMP','RECORD','CO2_1_avg','CO2_1_Min','CO2_1_Max','CO2_1_TMx','CO2_2_Avg','CO2_2_Max',
'CO2_2_TMx','CO2_2_Min','CO2_2_TMin','EOS_Flux_Avg','EOS_Flux_Max','EOS_Flux_TMx','EOS_Flux_Min',
'EOS_Flux_TMn','EOS_CO2_Avg','EOS_Temp_Avg','BattV_Avg','PTemp_C_Avg','Temp_C_Avg')
#Convert time to Posixct
table$time <- as.POSIXct(table$TIMESTAMP)
?as.POSIXct
View(table)
colnames(table) <- c('OID','TIMESTAMP','RECORD','CO2_1_avg','CO2_1_Min','CO2_1_Max','CO2_1_TMx','CO2_2_Avg','CO2_2_Max',
'CO2_2_TMx','CO2_2_Min','CO2_2_TMin','EOS_Flux_Avg','EOS_Flux_Max','EOS_Flux_TMx','EOS_Flux_Min',
'EOS_Flux_TMn','EOS_CO2_Avg','EOS_Temp_Avg','BattV_Avg','PTemp_C_Avg','Temp_C_Avg')
#Convert time to Posixct
table$time <- as.POSIXct(table$TIMESTAMP)
#Convert Analog outputs to PPM
table$CO2_1_PPM <- (table$CO2_1_avg / 1000) * 10000
table$CO2_2_PPM <- (table$CO2_2_Avg / 1000) * 10000
table$EOS_CO2_PPM <- (table$EOS_CO2_Avg / 5000) * 5000
table$EOS_tempC <- ((table$EOS_Temp_Avg / 5000) * 70) -20
#Convert Flux to range of -10 to 10 umol m2s1
table$EOS_Flux_umol <- ((table$EOS_Flux_Avg / 5000) * 20) -10
#Create simplified table with CO2 Measurements by Sensor
CO2_1 <- data.frame(table$CO2_1_PPM)
CO2_1$Sensor <- "Sensor 1"
CO2_1$Time <- as.POSIXct(table$TIMESTAMP)
colnames(CO2_1) <- c("PPM","Sensor","Time")
CO2_2 <- data.frame(table$CO2_2_PPM)
CO2_2$Sensor <- "Sensor 2"
CO2_2$Time <- as.POSIXct(table$TIMESTAMP)
colnames(CO2_2) <- c("PPM","Sensor","Time")
EOS_CO2 <- data.frame(table$EOS_CO2_PPM)
EOS_CO2$Sensor <- "EOS Sensor"
EOS_CO2$Time <- as.POSIXct(table$TIMESTAMP)
colnames(EOS_CO2) <- c("PPM","Sensor", "Time")
CO2_All <- rbind(CO2_1,CO2_2,EOS_CO2)
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")
lines
#CO2 Flux Plot
flux <- data.frame(as.POSIXct(table$TIMESTAMP))
flux$flux <- table$EOS_Flux_umol
colnames(flux) <- c('time','flux')
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))
flux_lines
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}),size=4)
?ylab
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))+
theme(axis.text.y = element_text(size = 20))
flux_lines
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))+
theme(axis.text.y = element_text(size = 14))
flux_lines
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18))
flux_lines
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18))
flux_lines
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor", size = 20)+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18))
flux_lines <- ggplot(flux, aes(x=time, y=flux, group=1))+geom_line(colour = '#4B9CD3')+
ggtitle("Lab Test of Flux Sensor")+
ylab(expression(mu ~ moles ~ m^{-2} ~ s^{-1}))+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
flux_lines
blogdown:::serve_site()
flux_lines
png(filename = '/Users/Andrew/Documents/fluxplot.png', width = 1600, height = 800, units = "px")
flux_lines%>%
png(filename = '/Users/Andrew/Documents/fluxplot.png', width = 1600, height = 800, units = "px")
png(filename = '/Users/Andrew/Documents/fluxplot.png', width = 1600, height = 800, units = "px")
blogdown:::serve_site()
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
lines
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
lines
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
lines
plot(lines)
lines
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
lines
lines
flux_lines
library(ggplot2)
table <- read.table("/Users/Andrew/Downloads/LabTest09192018.csv",header = TRUE, skip = 0, sep = ",")
colnames(table) <- c('OID','TIMESTAMP','RECORD','CO2_1_avg','CO2_1_Min','CO2_1_Max','CO2_1_TMx','CO2_2_Avg','CO2_2_Max',
'CO2_2_TMx','CO2_2_Min','CO2_2_TMin','EOS_Flux_Avg','EOS_Flux_Max','EOS_Flux_TMx','EOS_Flux_Min',
'EOS_Flux_TMn','EOS_CO2_Avg','EOS_Temp_Avg','BattV_Avg','PTemp_C_Avg','Temp_C_Avg')
#Convert time to Posixct
table$time <- as.POSIXct(table$TIMESTAMP)
#Convert Analog outputs to PPM
table$CO2_1_PPM <- (table$CO2_1_avg / 1000) * 10000
table$CO2_2_PPM <- (table$CO2_2_Avg / 1000) * 10000
table$EOS_CO2_PPM <- (table$EOS_CO2_Avg / 5000) * 5000
table$EOS_tempC <- ((table$EOS_Temp_Avg / 5000) * 70) -20
#Convert Flux to range of -10 to 10 umol m2s1
table$EOS_Flux_umol <- ((table$EOS_Flux_Avg / 5000) * 20) -10
#Build a plot to visualize variation in CO2 measurements
#Create simplified table with CO2 Measurements by Sensor
CO2_1 <- data.frame(table$CO2_1_PPM)
CO2_1$Sensor <- "Sensor 1"
CO2_1$Time <- as.POSIXct(table$TIMESTAMP)
colnames(CO2_1) <- c("PPM","Sensor","Time")
CO2_2 <- data.frame(table$CO2_2_PPM)
CO2_2$Sensor <- "Sensor 2"
CO2_2$Time <- as.POSIXct(table$TIMESTAMP)
colnames(CO2_2) <- c("PPM","Sensor","Time")
EOS_CO2 <- data.frame(table$EOS_CO2_PPM)
EOS_CO2$Sensor <- "EOS Sensor"
EOS_CO2$Time <- as.POSIXct(table$TIMESTAMP)
colnames(EOS_CO2) <- c("PPM","Sensor", "Time")
CO2_All <- rbind(CO2_1,CO2_2,EOS_CO2)
#Simple CO2 plot with lines
lines <- ggplot(CO2_All, aes(x=Time, y=PPM, group=Sensor, colour = Sensor))+geom_line()+
ggtitle("Lab Test of Multiple CO2 Sensors")+
theme(axis.text.y = element_text(size = 14),
axis.title.y = element_text(size=18),
axis.text.x = element_text(size = 14),
axis.title.x = element_text(size=18),
plot.title = element_text(size=20))
lines
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
